{"version":3,"sources":["app/routes.js","components/Snake/styles.js","pixiloop/PixiLoop.js","components/Snake/constants.js","components/Snake/units/world/models/mechanics.js","components/Snake/units/world/models/dispatch.js","components/Snake/units/world/models/index.js","components/Snake/units/world/models/states.js","components/Snake/units/world/models/maps.js","components/Snake/units/snake/models/states.js","components/Snake/units/snake/models/mechanics.js","components/Snake/units/snake/models/dispatch.js","components/Snake/units/snake/models/index.js","components/Snake/models.js","components/Snake/textures.js","components/Snake/units/world/RoadBlock.js","components/Snake/units/world/World.js","components/Snake/units/snake/SnakeNode.js","components/Snake/units/snake/Snake.js","components/Snake/controller.js","components/Snake/index.js","components/Scroller/styles.js","components/Scroller/textures.js","components/Scroller/units/platform/models/tiles.js","components/Scroller/units/platform/models/states.js","components/Scroller/constants.js","components/Scroller/units/platform/models/utility/platformScroll.js","components/Scroller/units/platform/models/mechanics.js","components/Scroller/units/platform/models/dispatch.js","components/Scroller/units/platform/models/utility/keyPressDispatch.js","components/Scroller/units/platform/models/setup.js","components/Scroller/units/platform/models/index.js","components/Scroller/units/commons/validations.js","components/Scroller/units/commons/fall.js","components/Scroller/units/commons/characterMotion.js","components/Scroller/units/commons/walk.js","components/Scroller/units/commons/jump.js","components/Scroller/units/hero/models/mechanics.js","components/Scroller/units/hero/models/dispatch.js","components/Scroller/units/hero/models/setup.js","components/Scroller/units/hero/models/index.js","components/Scroller/units/hero/models/states.js","components/Scroller/units/boss/models/states.js","components/Scroller/units/commons/ai/bossBrain.js","components/Scroller/units/commons/bossMoves.js","components/Scroller/units/boss/models/mechanics.js","components/Scroller/units/boss/models/dispatch.js","components/Scroller/units/boss/models/setup.js","components/Scroller/units/boss/models/index.js","components/Scroller/models.js","components/Scroller/units/platform/Tile.js","components/Scroller/units/platform/Platform.js","components/Scroller/units/hero/Hero.js","components/Scroller/units/boss/Boss.js","components/Scroller/controller.js","components/Scroller/index.js","app/AppRouter.js","styles/theme.js","api/users/index.js","components/Examples/models/effects.js","components/Examples/models/reducers.js","components/Examples/models/selectors.js","components/Examples/models/index.js","store/index.js","app/app.js","serviceWorker.js","index.js"],"names":["Routes","GAME","SCROLLER","SNAKE","styles","theme","canvasContainer","display","width","height","backgroundColor","ticker","PIXI","shared","autoStart","PixiLoopMode","pixiloop","this","reset","mode","loopStarted","mechanics","state","displays","dispatch","stateChanges","setupFunc","pixiSettings","models","app","Object","keys","key","console","log","makeDispatch","setup","setupGameState","setupDisplays","contextKey","setupKeys","context","func","undefined","params","changes","changedState","self","add","updateGameState","updateDisplays","start","stop","mKeys","mechs","mechObj","mechanicsFunction","modes","includes","length","tagChanges","update","fullState","changeMode","useDispatch","getGameState","registerDisplayAndState","name","initialState","unregisterDisplayAndState","Modes","Directions","UP","DOWN","RIGHT","LEFT","randomRange","min","max","Math","floor","random","popPelette","wolrdState","hasPelette","point","x","widthSize","y","heightSize","peletteXY","peletteX","peletteY","peletteShown","peletteIsShown","world","peletteIsEaten","blockSize","map","worldWidth","worldHeight","nodeSize","stepSize","mapPositionX","mapPositionY","speed","speedCycle","initialNodes","direction","nextDirection","hadFinishedAFullStep","updateMapPosition","node","nodeOffScreen","eatPelette","worldState","updateNode","updateNodes","shouldAddTail","i","nodes","oldDirection","last","tail","push","addTail","snakeMotion","snakeState","newState","snakeMove","allowedDirections","changeDirection","newDirection","head","snake","toString","TILE","from","MASK","ROADBLOCK","SNAKE_NODE","RoadBlock","Textures","WORLD_NAMESPACE","World","options","showPelette","renderRoadBlocks","roadBlocks","j","isBlock","renderBlockOrTitle","addChildAt","block","addChild","pelette","SnakeNode","SNAKE_NAMESPACE","Snake","removeChildren","nodeMask","renderNodes","mask","renderNode","snakeNode","keyCodesDirections","container","init","resolution","appendChild","view","initDisplays","setupGame","window","addEventListener","handleKeyDown","event","keyCode","stage","useStyles","styled","MuiGrid","spacing","makeStyles","Game","props","classes","useEffect","document","getElementById","controller","id","className","defaultProps","enhancers","memo","compose","TextureNames","FACE","BOSS","Tiles1","TileType","BG","WALL","FLOOR_ONLY","OBJECT","SLIPPERY_WALL","SLIPPERY_FLOOR_ONLY","TileProperties","type","texture","makeTile","visible","unitSize","stepChange","fullStepComplete","renderedOffset","stageVisibility","startX","startY","fullStageSize","computedSize","tiles","PlatformEdge","NO","RIGHT_EDGE","LEFT_EDGE","KeyTypes","DIRECTIONAL","ACTION","SUB_ACTION","KeyCodeTypes","KeyCodeDirections","KeyActions","isVisibleArea","visibility","moveTile","tile","updatePlatformState","hero","platformState","keyState","heroState","maxVisibleX","hadReachedEdge","platformEdge","atMiddleX","minVisibleX","scrollTiles","absChange","abs","scrollAdjY","scrollAdjX","mapX","mapY","updateVisibleArea","pushKeyPresses","kState","keyType","keyAction","actions","actionDone","keyUp","pushKeyAction","popKeyPresses","popKeyAction","setupWolrd","platform","tileValue","setupStage","keyPress","states","isWall","charTileBounds","withOffset","offsetValue","boundsOffset","xLeft","xRight","mapXLeft","mapXRight","bottomLeft","atExactTile","topLeft","midLowerLeft","midUpperLeft","topRight","midLowerRight","midUpperRight","bottomRight","hasWallInFront","bounds","validateFall","shouldFallOnWalking","shouldFall","jumping","falling","verticalSpeed","atGround","fallFromWalk","fall","gravity","hasGroundBelow","hasGround","otherFallCondition","fallFunc","stopFalling","characterMotion","hasWall","middleX","moveLeft","maxPlatformWidth","moveRight","jumpSpeedStart","jump","deleteAction","heroMove","setupHero","MoveCode","WAIT","WALK","JUMP","ATTACK","JUMP_ATTACK","ActionCode","actualMax","standBy","standByCount","standByLength","aiPropsFuncs","totalSteps","stepCount","unitSteps","jumpPower","attackCount","cycle","think","boss","onStandBy","completed","action","paramFunc","aiVariations","bossActions","char","charMoveLeft","charMoveRight","actionFunc","bossMoves","setupBoss","life","isThinking","Tile","tileData","sprite","style","fontFamily","fontSize","fontStyle","fontWeight","fill","number","data","Platform","renderVisibleArea","renderScroll","updateNumber","setupTileMatrix","HERO_NAMESPACE","Hero","setupSkin","skin","NAMESPACE","Boss","handleKeyUp","Scroller","AppRouter","BrowserRouter","Switch","Route","path","component","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","palette","primary","main","secondary","error","sand","shell","status","danger","contrastThreshold","tonalOffset","getUsersAPI","Promise","resolve","reject","axios","get","then","res","catch","getCompaniesAPI","getUsers","a","setUsers","users","getCompanies","setCompanies","companies","reducers","getExamplesState","createSelector","examples","getUsersState","getCompaniesState","defaultUser","userId","effects","reducer","selectors","omit","filter","prop","omitToRematch","middlewares","thunk","store","redux","plugins","selectPlugin","select","getState","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ecbbf25.chunk.js","sourcesContent":["const Routes = {\n    GAME: '/',\n    SCROLLER: '/scroller',\n    SNAKE: '/snake',\n   \n}\n\nexport default Routes;","const styles = (theme) => ({\n \n    canvasContainer: {\n        display: 'block',\n        width: '800px',\n        height: '600px',\n        backgroundColor: '#33ccFF',\n    },\n     \n  });\n  \n  export default styles;\n  ","import * as PIXI from 'pixi.js';\n\nconst ticker = PIXI.Ticker.shared;\nticker.autoStart = false;\n\nexport const PixiLoopMode = {\n    DEFAULT: 'default',\n};\n\nclass PixiLoop {\n\n    constructor() {\n        this.reset();\n    }\n\n    reset() {\n        this.mode = PixiLoopMode.DEFAULT;\n        this.loopStarted = false;\n        this.mechanics = {};\n        this.state = {};\n        this.displays = {};\n        this.dispatch = {};\n        this.stateChanges = {};\n        this.setupFunc = {};\n    }\n\n    init( {pixiSettings, models}) {\n        this.reset();\n        this.app = new PIXI.Application(pixiSettings);\n        const keys = Object.keys(models);\n        for ( let key of keys) {\n            console.log(\"Key: \", key);\n            console.log(models[key]);\n            if (models[key].dispatch ) {\n                this.makeDispatch(key,models[key].dispatch);\n            }\n            if( models[key].mechanics) this.mechanics[key] = models[key].mechanics;\n            if( models[key].state) this.state[key] = models[key].state;\n            if( models[key].setup) this.setupFunc[key] = models[key].setup;\n        }\n    }\n\n    setupGame(){\n        this.setupGameState();\n        this.setupDisplays();\n    }\n\n    setupGameState() {\n        const contextKeys =  Object.keys(this.setupFunc);\n        for( let contextKey of contextKeys) {\n            let setupKeys = Object.keys(this.setupFunc[contextKey]);\n            let context = this.setupFunc[contextKey];\n            for( let setupKey of setupKeys) {\n                const func = context[setupKey];\n                this.state = func( {state: this.state, key: contextKey} );\n            }\n        }\n    }\n\n    setupDisplays(){\n        const keys = Object.keys(this.displays);\n        console.log(\"\");\n        console.log(\"Setup Displays....\");\n        \n        for(let key of keys) {\n            const display = this.displays[key];\n            console.log(\"Setup Display: \", key , \" Display: \", display);\n            if (display.setup && \n                typeof display.setup === 'function' \n                && this.state[key]) {\n                display.setup(this.state[key]);\n            }\n        }\n    }\n\n    makeDispatch(context,dispatch) {\n        let keys = Object.keys(dispatch);\n        if( this.dispatch[context] === undefined) this.dispatch[context] = {};\n        for( let key of keys) {\n            const func = dispatch[key];\n            this.dispatch[context][key] = ( params ) => {\n               func( this.state, params );\n            }\n        }\n       \n    }\n\n    tagChanges(changes) {\n        for( let changedState of changes) {\n            this.stateChanges[changedState] = true;\n        }\n    }\n\n    start(){\n        const self  = this;\n        function gameLoop(){\n            self.updateGameState();\n            self.updateDisplays();\n        }\n        if (!this.loopStarted){\n            ticker.add(gameLoop);\n            ticker.start();\n            this.loopStarted = true;\n        }\n    }\n\n    stop() {\n        ticker.stop();\n    }\n    \n    updateGameState() {\n        const keys =  Object.keys(this.mechanics);\n        for( let key of keys) {\n            let mKeys = Object.keys(this.mechanics[key]);\n            let mechs = this.mechanics[key];\n            for( let mKey of mKeys) {\n                const mechObj = mechs[mKey];\n                const func = mechObj.mechanicsFunction;\n                if(mechObj.modes.includes(this.mode) && func && typeof func === 'function'){\n                    const {\n                        state,\n                        changes,\n                    } = func( {state: this.state, key: key} );\n                    if (changes.length > 0) {\n                        this.state = state;\n                        this.tagChanges(changes);\n                    }  \n                }\n            }\n        }\n    }\n\n    updateDisplays(){\n        const keys =  Object.keys(this.displays);\n        for( let key of keys) {\n            let display = this.displays[key];\n            if( this.stateChanges[key] && display && display.update ) {\n                display.update( { fullState: this.state, state: this.state[key], key: key });\n            }\n            this.stateChanges[key] = false;\n        }\n    }\n}\n\nconst pixiloop = new PixiLoop();\nexport default pixiloop;\n\nexport function changeMode(mode) {\n    pixiloop.mode = mode;\n}\n\nexport function registerDispatch(name, func) {\n    pixiloop.dispatch[name] = (params) => (func(pixiloop.state, params));\n}\n\nexport function useDispatch() {\n  return pixiloop.dispatch;\n}\n\nexport function getDispatch() {\n    return pixiloop.dispatch;\n}\n\nexport function getGameState() {\n    return pixiloop.state;\n}\n\nexport function registerDisplayAndState( name, display, initialState = null) {\n    pixiloop.displays[name] = display;\n    if (initialState) pixiloop.state[name] = initialState;\n}\n\nexport function unregisterDisplayAndState(name) {\n    delete pixiloop.displays[name];\n    delete pixiloop.state[name];\n}","export const Modes = {\n    PLAY: 'play',\n};\n\nexport const Directions = {\n    UP: 0,\n    DOWN: 1,\n    RIGHT: 2,\n    LEFT: 3,\n};\n\nexport const Speed = {\n    SLOW: 4,\n    MEDIUM: 3,\n    FAST: 2,\n    INSANE: 1,\n};\n\n\nexport function randomRange (min, max) {\n    return Math.floor( Math.random() * (max - min)) + min; \n}","import { Modes, randomRange } from '../../../constants';\n \nfunction peletteXY(state){\n    return { \n        x: randomRange(0, state.widthSize - 1), \n        y: randomRange(0, state.heightSize - 1),\n    };\n}\n\nconst popPelette =  {\n    \n    mechanicsFunction: ( { state, key} ) => {\n        const wolrdState = state[key];\n\n        if (wolrdState.hasPelette === false) {\n            let point = peletteXY(wolrdState);\n            wolrdState.peletteX = point.x;\n            wolrdState.peletteY = point.y;\n            wolrdState.hasPelette = true;\n            wolrdState.peletteShown = false;\n            return { \n                state: { ...state, [key]: { ...wolrdState } },\n                changes: [key],\n            };\n        }\n        \n        return { changes:[]};\n    },\n    modes: [Modes.PLAY],\n}\nexport default {\n    popPelette,\n}","function peletteIsShown(state, {peletteShown = true}) {\n    state.world.peletteShown = peletteShown;\n}\n\nfunction peletteIsEaten(state, { hasPelette = false}) {\n    state.world.hasPelette = hasPelette;\n}\n\nexport default {\n    peletteIsShown,\n    peletteIsEaten,\n}","import * as states from './states';\nimport mechanics from './mechanics';\nimport dispatch from './dispatch';\n\nexport default {\n    name: 'world',\n    state: { ...states.initialState },\n    mechanics,\n    dispatch,\n};","import { map1 } from './maps';\n\nexport const initialState = {\n    blockSize: 50,\n    widthSize: 12,\n    heightSize: 12,\n    map: map1,\n    worldWidth: 12 * 50,\n    worldHeight: 12 * 50,\n    peletteX: 0,\n    peletteY: 0,\n    peletteShown: true,\n    hasPelette: false,\n};","export const map1 = [\n    [1,1,0,0,0,0,0,0,0,0,1,1],\n    [1,0,0,0,0,0,0,0,0,0,0,1],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [0,0,0,0,0,0,0,0,0,0,0,0],\n    [1,0,0,0,0,0,0,0,0,0,0,1],\n    [1,1,0,0,0,0,0,0,0,0,1,1],\n];","import { Directions, Speed } from '../../../constants';\n\nexport const initialState = {\n    nodeSize: 50,\n    stepSize: 50 / 4,\n    mapPositionX: 3,\n    mapPositionY: 3,\n    speed: Speed.INSANE,\n    speedCycle: 0,\n};\n\nexport const initialNodes = [\n    {   \n        /* head node */\n        x: initialState.nodeSize * 5,\n        y: initialState.nodeSize * 5, \n        direction: Directions.RIGHT,\n        nextDirection: Directions.RIGHT,\n    },\n\n    {   \n        x: initialState.nodeSize * 4,\n        y: initialState.nodeSize * 5, \n        direction: Directions.RIGHT,\n        nextDirection: Directions.RIGHT,\n    },\n\n    {   \n        x: initialState.nodeSize * 3,\n        y: initialState.nodeSize * 5, \n        direction: Directions.RIGHT,\n        nextDirection: Directions.RIGHT,\n    },\n\n];\n","import { Modes, Directions} from '../../../constants';\n\nimport { getGameState, getDispatch } from '../../../../../pixiloop';\n\nfunction hadFinishedAFullStep(state){\n     if( state.x % 50 === 0 && state.y % 50 === 0) {\n         return true;\n     }\n     return false;\n}\n\nfunction updateMapPosition(state, node) {\n    if( node.x === 0) {\n        node.mapPositionX = 0;\n    } else {\n        node.mapPositionX = node.x / state.nodeSize;\n    }\n\n    if( node.y === 0) {\n        node.mapPositionY = 0;\n    } else {\n        node.mapPositionY = node.y / state.nodeSize;\n    }\n}\n\nfunction nodeOffScreen(state,node) {\n    const fullState = getGameState();\n    const world = fullState.world;\n    if( node.x >= world.worldWidth) {\n        node.x = 0;\n    } else if (node.x < 0 - state.nodeSize){\n        node.x = world.worldWidth;\n    }\n\n    if( node.y >= world.worldHeight) {\n        node.y = 0;\n    } else if (node.y < 0 - state.nodeSize){\n        node.y = world.worldHeight;\n    }\n}\n\nfunction eatPelette(node) {\n    const peletteIsEaten = getDispatch().world.peletteIsEaten;\n    const worldState = getGameState().world;\n    if (node.mapPositionX === worldState.peletteX && \n        node.mapPositionY === worldState.peletteY) {\n        peletteIsEaten({hasPelette: false});\n        return true;\n    }\n    return false;\n}\n\nfunction updateNode(state, node){\n    if (node.direction === Directions.UP ) {\n        node.y -= state.stepSize;\n    } else if (node.direction === Directions.DOWN ) {\n        node.y += state.stepSize;\n    } else if (node.direction === Directions.LEFT ) {\n        node.x -= state.stepSize;\n    } else if (node.direction === Directions.RIGHT ) {\n        node.x += state.stepSize;\n    } \n}\n\nfunction updateNodes(state) {\n    let shouldAddTail = false;\n    for( var i = 0; i < state.nodes.length; i++) {\n        const node = state.nodes[i];\n        updateNode(state, node);\n        if( hadFinishedAFullStep(node)) {\n            nodeOffScreen(state,node);\n            updateMapPosition(state, node);\n            node.oldDirection = node.direction;\n            if (i === 0) {\n                shouldAddTail = eatPelette(node);\n                node.direction = node.nextDirection;\n            } else {\n                node.direction = state.nodes[i-1].oldDirection;\n            }\n        }\n    }\n    if (shouldAddTail) addTail(state);\n}  \n\nfunction addTail(state){\n    const last = state.nodes[state.nodes.length-1];\n    const tail = { ...last };\n    if ( last.direction === Directions.UP) {\n        tail.mapPositionY += 1;\n        tail.y += state.nodeSize;\n    } else if (last.direction === Directions.DOWN) {\n        tail.mapPositionY -= 1;\n        tail.y -= state.nodeSize;\n    } else if ( last.direction === Directions.LEFT) {\n        tail.mapPositionX += 1;\n        tail.x += state.nodeSize;\n    } else if (last.direction === Directions.RIGHT) {\n        tail.mapPositionX -= 1;\n        tail.x -= state.nodeSize;\n    }\n    state.nodes.push(tail);\n}\n\nfunction snakeMove(state) {\n    let newState = {...state};\n    updateNodes(newState);\n    return newState;\n}\n\nconst snakeMotion = {\n    mechanicsFunction: ({state, key}) => {\n        let snakeState = {...state[key]};\n        snakeState.speedCycle += 1;\n        if( snakeState.speedCycle >= snakeState.speed){\n            snakeState = snakeMove(snakeState);\n            snakeState.speedCycle = 0;\n        }\n      \n        return {\n            state: { ...state, [key]: { ...snakeState } },\n            changes: [key],\n        };\n    },\n    modes: [ Modes.PLAY ],\n};\n\nexport default {\n    snakeMotion,\n}","import pixiloop from '../../../../../pixiloop';\nimport { Directions } from '../../../constants';\n\nconst allowedDirections = {\n    '0': [Directions.RIGHT, Directions.LEFT],\n    '1': [Directions.RIGHT, Directions.LEFT],\n    '2': [Directions.UP, Directions.DOWN],\n    '3': [Directions.UP, Directions.DOWN],\n};\n\nfunction changeDirection(state, {newDirection}) {\n    const head =  state.snake.nodes[0];\n    let allowed = allowedDirections[head.oldDirection.toString()];\n    if( allowed.includes(newDirection)) {\n        state.snake.nodes[0].nextDirection = newDirection;\n    }\n}\n\nexport default {\n    changeDirection,\n}","import { initialState , initialNodes} from './states';\nimport mechanics from './mechanics';\nimport dispatch from './dispatch';\n\nexport default {\n    name: 'snake',\n    state: { \n        ...initialState,\n        nodes: [...initialNodes],\n    },\n    mechanics,\n    dispatch,\n};","import world from './units/world/models';\nimport snake from './units/snake/models';\n\n\nexport default {\n    world,\n    snake,\n}","import * as PIXI from 'pixi.js';\n\nexport default {\n    TILE: PIXI.Texture.from(\"assets/tile.png\"),\n    MASK: PIXI.Texture.from(\"assets/mask.png\"),\n    ROADBLOCK: PIXI.Texture.from(\"assets/roadblock.png\"),\n    SNAKE_NODE: PIXI.Texture.from(\"assets/roadblock.png\"),\n};\n","import * as PIXI from 'pixi.js';\nimport Textures  from '../../textures';\n\nclass RoadBlock extends PIXI.Sprite {\n    constructor(){\n        super(Textures.ROADBLOCK);\n    }\n}\nexport default RoadBlock;","import * as PIXI from 'pixi.js';\nimport { registerDisplayAndState, unregisterDisplayAndState, useDispatch } from '../../../../pixiloop';\nimport RoadBlock from './RoadBlock';\nimport Textures from '../../textures';\n\nconst WORLD_NAMESPACE = 'world';\nclass World extends PIXI.Container {\n    constructor() {\n        super();\n        registerDisplayAndState(WORLD_NAMESPACE, this );\n    }\n    \n    destroy(options){\n        unregisterDisplayAndState(WORLD_NAMESPACE);\n        super.destroy(options);\n    }\n\n    update({fullState, state, key}) {\n        this.state = state;\n        this.showPelette();\n    }\n\n    setup(state) {\n        this.state = state;\n        this.width = 12 * this.state.blockSize;\n        this.height = 12 * this.state.blockSize;\n        if( state && state.map) {\n            this.renderRoadBlocks(state.map);\n        }\n    }\n\n    renderRoadBlocks(map) {\n        this.roadBlocks = new PIXI.Container();\n        this.roadBlocks.width = this.width;\n        this.roadBlocks.height = this.height;\n        for ( let i = 0; i < map.length; i++ ) {\n            for (let j = 0; j < map[i].length; j++) {\n                let isBlock = map[i][j];\n                this.renderBlockOrTitle(j,i, isBlock);\n            }\n        }\n        console.log(\"ROadBlocks...\", this.roadBlocks);\n        this.addChildAt(this.roadBlocks,0);\n    }\n\n    renderBlockOrTitle(x,y, isBlock){\n        let blockSize = 50;\n        if(this.state.blockSize) blockSize = this.state.blockSize;\n        let block = new PIXI.Sprite(Textures.TILE);\n        if( isBlock ) {\n            block = new RoadBlock();\n        }\n        block.width = this.blockSize;\n        block.height = this.blockSize;\n        block.x = x * blockSize;\n        block.y = y * blockSize;\n        block.width = blockSize;\n        block.height = blockSize;\n        this.roadBlocks.addChild(block);\n    }\n    \n    showPelette(){\n        if(!this.state.peletteShown) {\n            if (!this.pelette) {\n                this.pelette = new PIXI.Sprite(Textures.ROADBLOCK);\n                this.pelette.width = this.state.blockSize;\n                this.pelette.height = this.state.blockSize;\n                this.addChildAt(this.pelette,1);\n            }\n            this.pelette.x = this.state.blockSize * this.state.peletteX;\n            this.pelette.y = this.state.blockSize * this.state.peletteY;\n            const { world: { peletteIsShown }} = useDispatch();\n            peletteIsShown({peletteShown: true});\n        }\n    }\n}\n\nexport default World;","import * as PIXI from 'pixi.js';\nimport  Textures from '../../textures';\n\nclass SnakeNode extends PIXI.Sprite {\n    constructor(){\n        super(Textures.SNAKE_NODE);\n    }\n}\n\nexport default SnakeNode;","import * as PIXI from 'pixi.js';\nimport { registerDisplayAndState, unregisterDisplayAndState } from '../../../../pixiloop';\nimport Textures from '../../textures';\n\nimport SnakeNode from './SnakeNode';\nconst SNAKE_NAMESPACE = 'snake';\n\nclass Snake extends PIXI.Container {\n\n    constructor(){\n        super();\n        registerDisplayAndState(SNAKE_NAMESPACE, this);\n    }\n    \n    destroy(options){\n        unregisterDisplayAndState(SNAKE_NAMESPACE);\n        super.destroy(options);\n    }\n\n    setup(state){\n        this.state = state;\n        this.nodes = [];\n        this.removeChildren();\n        this.nodeMask = new PIXI.Sprite(Textures.MASK);\n        this.nodeMask.width = 600;\n        this.nodeMask.height = 600;\n        this.nodeMask.x = 0;\n        this.nodeMask.y = 0;\n        this.addChild(this.nodeMask);\n        this.renderNodes();\n    }\n\n    update({state}) {\n        this.state = state;\n        this.renderNodes();\n    }\n\n    renderNodes(){\n        const nodes = this.state.nodes;\n        for( var i = 0; i < nodes.length; i++) {\n            if(this.nodes[i] === null || this.nodes[i] === undefined)  {\n                this.nodes[i] = new SnakeNode();\n                this.nodes[i].mask = this.nodeMask;\n                this.addChild(this.nodes[i]);\n            }\n            this.renderNode(this.nodes[i], nodes[i]);\n        }\n    }\n\n    renderNode(snakeNode, node) {\n        snakeNode.width = this.state.nodeSize;\n        snakeNode.height = this.state.nodeSize;\n        snakeNode.x = node.x;\n        snakeNode.y = node.y;\n    }\n\n}\n\nexport default Snake;","import  * as PIXI from 'pixi.js';\nimport pixiloop, { changeMode, useDispatch } from '../../pixiloop/';\n\nimport models from './models';\nimport World from './units/world/';\nimport Snake from './units/snake/';\nimport Textures from './textures';\nimport RoadBlock  from './units/world/RoadBlock';\n\n\nimport { Modes, Directions } from './constants';\n\nconst keyCodesDirections = {\n    \"87\": Directions.UP,\n    \"65\": Directions.LEFT,\n    \"83\": Directions.DOWN,\n    \"68\": Directions.RIGHT,\n    \"38\": Directions.UP,\n    \"37\": Directions.LEFT,\n    \"40\": Directions.DOWN,\n    \"39\": Directions.RIGHT,\n}\n\nclass GameController {\n\n    init(container) {\n        console.log(\"MOdels\");\n        console.log(models);\n        pixiloop.init({\n            pixiSettings:  {\n                width: 800,\n                height: 600,\n                backgroundColor: 0xFF9900,\n                resolution: 1,\n            },\n            models,\n        });\n        container.appendChild(pixiloop.app.view);\n        this.initDisplays();\n        pixiloop.setupGame();\n        changeMode(Modes.PLAY);\n        pixiloop.start();\n        window.addEventListener('keydown',this.handleKeyDown,false);\n    }\n\n    handleKeyDown(event) {\n        const direction = keyCodesDirections[event.keyCode.toString()];\n        const { snake: { changeDirection } } = useDispatch();\n        changeDirection({newDirection: direction});\n    }\n\n    initDisplays(){\n\n        this.world = new World();\n        this.world.x = (800 - 600)/2;\n        this.world.y = 0;\n        pixiloop.app.stage.addChild( this.world);\n\n        this.snake = new Snake();\n        this.snake.x = 0;\n        this.snake.y = 0;\n        this.world.addChild(this.snake);\n        \n    }   \n}\n\nexport default new GameController();","import React, { memo, useEffect } from 'react'; \n\nimport MuiGrid from '@material-ui/core/Grid';\nimport { spacing } from '@material-ui/system';\nimport { styled } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport styles from './styles';\nimport controller from './controller';\n\nconst Grid = styled(MuiGrid)(spacing);\nconst useStyles = makeStyles(styles);\n\nfunction Game(props){\n    const classes = useStyles();\n\n    function setupGame(){\n        const container = document.getElementById('gameCanvasContainer');\n        controller.init(container);\n    }\n\n    useEffect (() => {\n        setupGame();\n    },[]);\n\n    return (\n        <div id=\"gameCanvasContainer\" className={classes.canvasContainer}>\n        \n        </div>\n    )\n};\n\nGame.propTypes = {};  \nGame.defaultProps = {};\n\nconst enhancers = [\n    memo,\n];\n\nexport default compose(...enhancers)(Game);","const styles = (theme) => ({\n \n    canvasContainer: {\n        display: 'block',\n        width: '800px',\n        height: '600px',\n        backgroundColor: '#33ccFF',\n    },\n     \n  });\n  \n  export default styles;\n  ","import * as PIXI from 'pixi.js';\n\n\nexport const TextureNames = {\n    TILE: 'TILE',\n    MASK: 'MASK',\n    ROADBLOCK: 'ROADBLOCK',\n    FACE: 'FACE',\n    \n};\n\nconst Textures = {\n    TILE: PIXI.Texture.from(\"assets/tile.png\"),\n    MASK: PIXI.Texture.from(\"assets/mask.png\"),\n    ROADBLOCK: PIXI.Texture.from(\"assets/roadblock.png\"),\n    FACE: PIXI.Texture.from(\"assets/hero.png\"),\n    BOSS: PIXI.Texture.from(\"assets/boss.png\"),\n}\n\nexport default Textures;\n\nexport function toTexture(name) {\n    return Textures[name];\n}","import { TextureNames } from '../../../textures';\n\nexport const Tiles1 = [\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,1,1,1,  1,0,0,0,0,  0,0,0,0,1, 1,1,1,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n\n    [ 0,0,0,0,0,  0,0,0,0,0, 0,0,0,0,0,  0,0,0,1,1,  1,1,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ],\n    [ 1,1,0,0,0,  0,1,1,0,0, 0,0,0,0,0,  0,0,1,1,1,  1,1,1,0,0, 0,0,0,0,0, 0,0,1,1,0, 0,0,0,1,1 ],\n    [ 1,1,0,0,0,  0,1,1,0,0, 0,0,0,0,0,  0,1,1,1,1,  1,1,1,1,0, 0,0,0,0,0, 0,0,1,1,0, 0,0,0,1,1 ],    \n    [ 1,1,1,1,1,  1,1,1,1,1, 1,1,1,1,1,  1,1,1,1,1,  1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1 ], \n];\n\n\nexport const TileType = {\n    BG: 0,\n    WALL: 1, /* Hero can step on it, will bump on it and cannot go through */\n    FLOOR_ONLY: 2, /* HERO CAN STEP ON IT BUT CAN JUMP ON IT */\n    OBJECT: 3,\n    SLIPPERY_WALL: 11,\n    SLIPPERY_FLOOR_ONLY: 12,\n};\n\nexport const TileProperties = [\n     /* Tile = 0 */ \n    { type: TileType.BG, texture: TextureNames.TILE },\n     /* Tile = 1 */ \n    { type: TileType.WALL, texture: TextureNames.ROADBLOCK },\n]\n\nexport function makeTile(i , visible ) {\n    return { ...TileProperties[i], visible };\n}","import { Tiles1 } from './tiles';\n\nexport const initialState = {\n    unitSize: 50,\n    stepSize: 50 / 10,\n    stepChange: 0,\n    fullStepComplete: false,\n    renderedOffset: 2,\n    stageVisibility: {\n        startX: 4,\n        startY: 0,\n        width: 15,\n        height: 12,\n    },\n\n    fullStageSize: {\n        width: Tiles1[0].length,\n        height: Tiles1.length,\n    },\n\n    computedSize: {\n        width: Tiles1[0].length * 50,\n        height: Tiles1.length * 50,\n    },\n    stage:[],\n    tiles: Tiles1,\n};","export const Modes = {\n    PLAY: 'play',\n};\n\nexport const Directions = {\n    UP: 0,\n    DOWN: 1,\n    RIGHT: 2,\n    LEFT: 3,\n};\n\nexport const Speed = {\n    SLOW: 4,\n    MEDIUM: 3,\n    FAST: 2,\n    INSANE: 1,\n};\n\nexport const PlatformEdge = {\n    NO: -1,\n    RIGHT_EDGE: 1,\n    LEFT_EDGE: 2,\n};\n\nexport function randomRange (min, max) {\n    return Math.floor( Math.random() * (max - min)) + min; \n}\n\nexport const KeyTypes = {\n    DIRECTIONAL: 0,\n    ACTION: 1,\n    SUB_ACTION: 2,\n}\n\nexport const KeyCodeTypes = {\n\n    \"65\": KeyTypes.DIRECTIONAL,\n    \"68\": KeyTypes.DIRECTIONAL,\n\n    \"37\": KeyTypes.DIRECTIONAL,\n    \"39\": KeyTypes.DIRECTIONAL,\n    /* j for jump */\n    \"74\": KeyTypes.ACTION,\n    /* k for kick or attack */\n    \"75\": KeyTypes.ACTION,\n};\n\n\nexport const KeyCodeDirections = {\n\n    \"87\": Directions.UP,\n    \"65\": Directions.LEFT,\n    \"83\": Directions.DOWN,\n    \"68\": Directions.RIGHT,\n\n    \"38\": Directions.UP,\n    \"37\": Directions.LEFT,\n    \"40\": Directions.DOWN,\n    \"39\": Directions.RIGHT,\n};\n\nexport const KeyActionTypes = {\n    JUMP: 0,\n    ATTACK: 1,\n};\n\nexport const KeyActions = {\n    \"74\": KeyActionTypes.JUMP,\n    \"75\": KeyActionTypes.ATTACK,\n};","import { Directions , PlatformEdge } from '../../../../constants';\n\n\nexport function isVisibleArea(x, visibility, renderedOffset) {\n    if( x < visibility.startX - renderedOffset ||\n        x > visibility.startX + visibility.width + renderedOffset ) {\n        //out of visible area\n       return false;\n    }\n    return true;\n} \n\nfunction moveTile(state, tile, direction) {\n    let stepSize = state.stepSize;\n    if (direction === Directions.LEFT) {\n        tile.x += stepSize;\n    } else if (direction === Directions.RIGHT) {\n        tile.x -= stepSize;\n    }\n}\n\nexport function hadReachedEdge(state, direction) {\n    const {\n        stage,\n        stageVisibility: visibility,\n    } = state;\n    const maxVisibleX = visibility.startX + visibility.width;\n    if (direction === Directions.RIGHT &&  maxVisibleX  >=  stage[0].length) {  \n        return true;\n    } else if(direction === Directions.LEFT && visibility.startX <= 0) {\n        return true;\n    }\n    return false;\n}\n\nexport function setHerosEdge(hero, direction) {\n    if (direction === Directions.RIGHT) hero.platformEdge = PlatformEdge.RIGHT_EDGE;\n    if (direction === Directions.LEFT) hero.platformEdge = PlatformEdge.LEFT_EDGE;\n    if (direction === -1) hero.platformEdge = PlatformEdge.NO; \n}\n/*\n * Scroll The Tiles \n */\n\nexport function scrollTiles (state, direction){\n    const  {\n        stage,\n        stageVisibility: visibility,\n        renderedOffset,\n    } = state;\n\n    let maxVisibleX = visibility.startX + visibility.width + renderedOffset;\n    if (maxVisibleX >= stage[0].length-1) maxVisibleX = stage[0].length - 1;\n    let minVisibleX = visibility.startX - renderedOffset; \n    if (minVisibleX <= 0) minVisibleX = 0;\n    if( direction === Directions.LEFT) {\n        state.stepChange += state.stepSize;\n    } else if ( direction === Directions.RIGHT) {\n        state.stepChange -= state.stepSize;\n    }\n    for (let i = 0; i < stage.length; i++) {\n        for (let j = minVisibleX;  j <= maxVisibleX; j++) {\n            moveTile(state, stage[i][j], direction);\n        }\n    }\n}\n\nexport function updateVisibleArea (state, direction) {\n    let stage = state.stage;\n\n    if (direction === Directions.LEFT) {\n        state.stageVisibility.startX -= 1;\n    } else if (direction ===  Directions.RIGHT) {\n        state.stageVisibility.startX += 1;\n    }\n\n    let visibility = state.stageVisibility;\n    let renderedOffset = state.renderedOffset;\n\n    for( let i = 0 ; i < stage.length; i++ ){\n        let scrollAdjY = i - visibility.startY;\n        for ( let j = 0; j < stage[i].length; j++) {\n            let tile = stage[i][j];\n            let scrollAdjX = j - visibility.startX;\n            tile.visible = isVisibleArea(j, visibility, renderedOffset);\n            tile.mapX = scrollAdjX;\n            tile.mapY =  scrollAdjY;\n            tile.x = tile.mapX * state.unitSize;\n            tile.y = tile.mapY * state.unitSize;\n            stage[i][j] = tile;\n        }\n    }\n\n    state.stepChange = 0;\n}","import { Modes } from '../../../constants';\nimport { scrollTiles , updateVisibleArea, hadReachedEdge ,setHerosEdge } from './utility/platformScroll';\n\nconst updatePlatformState =  {\n\n    mechanicsFunction: ( { state, key} ) => {\n\n        const platformState = state[key];\n        const keyState = state['keyPress'];\n        const heroState = state['hero'];\n\n        \n\n        if (hadReachedEdge(platformState, keyState.direction)) {\n            setHerosEdge(heroState, keyState.direction);\n            return { state, changes: ['hero'] };\n        }\n\n        if( heroState.atMiddleX === false ){\n            return { changes: [] };\n        }\n \n        scrollTiles(platformState, keyState.direction);\n        platformState.fullStepComplete = false;\n        const absChange = Math.abs(platformState.stepChange);\n        if( absChange !== 0 && absChange % platformState.unitSize === 0) {\n            updateVisibleArea(platformState, keyState.direction);\n            platformState.fullStepComplete = true;\n        }\n\n        return { state , changes:[key]};\n    },\n    modes: [Modes.PLAY],\n}\nexport default {\n    updatePlatformState,\n}","import { popKeyPresses, pushKeyPresses } from './utility/keyPressDispatch';\n\nexport default {\n    pushKeyPresses,\n    popKeyPresses,\n}","import { \n    KeyCodeTypes, \n    KeyTypes, \n    KeyCodeDirections,  \n    KeyActions,\n} from '../../../../constants';\n\nfunction pushKeyAction(kState, keyCode){\n    let keyAction = kState.actions[keyCode.toString()]; \n    if ( keyAction === undefined || keyAction === null) {\n        kState.actions[keyCode.toString()] = {  \n            type: KeyActions[keyCode.toString()],\n            actionDone: false,\n            keyUp: false,\n        };\n    }\n}\n\nfunction popKeyAction( kState, keyCode) {\n    let keyAction = kState.actions[keyCode.toString()];\n    if ( keyAction !== undefined ) {\n        keyAction.keyUp = true;\n        if( keyAction.actionDone === true ) {\n           delete kState.actions[keyCode.toString()];\n        }\n    }\n}\n\n/*\n * The following function will register and unregister key presses and will be validate during the game loop cycle.\n */ \n\nexport function pushKeyPresses (state, { keyCode }) {\n    let kState = state['keyPress'];\n    let keyType = KeyCodeTypes[keyCode.toString()];\n    if( keyType === KeyTypes.DIRECTIONAL) {\n        if (kState.direction === -1) {\n            kState.direction = KeyCodeDirections[keyCode.toString()];\n        }\n    } else if( keyType === KeyTypes.ACTION) {\n        pushKeyAction(kState, keyCode);\n    }\n}\n\nexport function popKeyPresses ( state, { keyCode }) {\n    let kState = state['keyPress'];\n    let keyType = KeyCodeTypes[keyCode.toString()];\n    if( keyType === KeyTypes.DIRECTIONAL) {\n        kState.oldDirection = kState.direction;\n        kState.direction = -1;\n    } else if( keyType === KeyTypes.ACTION) {\n       popKeyAction(kState,keyCode);\n    }\n}","import  { makeTile } from './tiles'\nimport { isVisibleArea } from './utility/platformScroll';\n \nfunction  setupStage(state, tiles){\n    let stage = [];\n    let visibility = state.stageVisibility;\n    let renderedOffset = state.renderedOffset;\n    for( let i = 0 ; i < tiles.length; i++ ){\n        let scrollAdjY = i - visibility.startY;\n        stage[i] = [];\n        for ( let j = 0; j < tiles[i].length; j++) {\n            let tileValue = tiles[i][j];\n            let scrollAdjX = j - visibility.startX;\n            let willRender = isVisibleArea(j, visibility, renderedOffset);\n            let tile = makeTile(tileValue, willRender);\n            tile.mapX = scrollAdjX;\n            tile.mapY =  scrollAdjY;\n            tile.x = tile.mapX * state.unitSize;\n            tile.y = tile.mapY * state.unitSize;\n            stage[i][j] = tile;\n        }\n    }\n    return stage;\n}\n\n\nfunction setupWolrd( { state, key} ) {\n    let platform = state[key];\n    platform.stage = setupStage(platform, platform.tiles);\n\n    console.log(\"\");\n    console.log(\"\");\n    console.log(\"Setup platform\");\n    console.log(platform);\n    return {\n        ...state,\n        platform: platform,\n        keyPress: {\n            direction: -1, /* left or  right only */\n            actions:{},\n        },\n    }\n}\n\n\nexport default {\n    setupWolrd,\n}","import * as states from './states';\nimport mechanics from './mechanics';\nimport dispatch from './dispatch';\nimport setup from './setup';\n\nexport default {\n    name: 'platform',\n    state: { ...states.initialState },\n    mechanics,\n    dispatch,\n    setup,\n};","import { Directions } from '../../constants';\nimport { TileType } from '../platform/models/tiles';\n\n\nexport function isWall(tile) {\n    if ( tile && tile.type === TileType.WALL) return true;\n    return false;\n}\n\nexport function hasGroundBelow (platform, hero, keyPress) {\n    \n    const bounds = charTileBounds( platform, hero, keyPress);\n    const { direction } = keyPress;\n\n    if (hero.atExactTile && isWall(bounds.bottomLeft)) {\n        return [ true , bounds.bottomLeft];\n    }\n\n    if (direction === -1) {\n        //console.log(\"DIrection is -1 straight...\", bounds.bottomLeft);\n        if( isWall(bounds.bottomLeft) || isWall(bounds.bottomRight)) {\n            return [true, bounds.bottomLeft];\n        }\n    } \n\n    if (direction === Directions.LEFT) {\n        if( isWall(bounds.bottomLeft) || isWall(bounds.bottomRight)) {\n            return [true, bounds.bottomLeft];\n        }\n    }\n\n    if (direction === Directions.RIGHT) {\n        if( isWall(bounds.bottomRight) || isWall(bounds.bottomLeft)) {\n            return [true, bounds.bottomRight];\n        }\n    }\n\n    return [false, null];  \n}\n\nfunction tile(stage, mapY, mapX){\n    if( stage[mapY] && stage[mapY][mapX]) {\n        return stage[mapY][mapX];\n    }\n    return undefined;\n} \n\nexport function charTileBounds (platform,hero, { direction, oldDirection} , withOffset = true) {\n    const stage = platform.stage;\n    let offsetValue = (withOffset ? hero.boundsOffset : 0);\n    let xLeft = (hero.x + offsetValue) / platform.unitSize;\n    let xRight = (hero.x + hero.width - offsetValue) /  platform.unitSize;\n\n    const mapY = Math.floor((hero.y + hero.height) / platform.unitSize);\n    let mapXLeft = Math.floor(xLeft) + platform.stageVisibility.startX;\n    let mapXRight = Math.floor(xRight) + platform.stageVisibility.startX;\n\n    if (hero.atMiddleX && direction === -1 && oldDirection === Directions.LEFT) {\n        mapXLeft -= 1;\n        mapXRight -= 1;\n    }\n\n    const bottomLeft = tile(stage, mapY, mapXLeft);\n    \n    if (bottomLeft && hero.x === bottomLeft.x) {\n        hero.atExactTile = true;\n    } else {\n        hero.atExactTile = false;\n    }\n\n    return {\n        topLeft: tile(stage, mapY - 3, mapXLeft),  \n        midLowerLeft: tile(stage, mapY - 1, mapXLeft),\n        midUpperLeft: tile(stage, mapY - 2, mapXLeft),\n        bottomLeft: bottomLeft,\n\n        topRight: tile(stage, mapY - 3, mapXRight),  \n        midLowerRight: tile(stage, mapY - 1, mapXRight),\n        midUpperRight: tile(stage, mapY - 2, mapXRight),\n        bottomRight: tile(stage, mapY, mapXRight),\n    };\n}\n\nexport function hasWallInFront(platform, hero, direction) {\n    const bounds = charTileBounds( platform, hero, {direction}, false);\n\n    if (direction === Directions.LEFT) {\n        if( isWall(bounds.midLowerLeft)  || isWall(bounds.midUpperLeft) ){\n            return [ true , bounds.midLowerLeft];\n        }\n    }\n\n    if (direction === Directions.RIGHT) {\n        if( isWall(bounds.midLowerRight)  || isWall(bounds.midUpperRight) ){\n            return [ true , bounds.midUpperRight];\n        }\n    }\n    return [false, null];\n}\n ","import { TileType } from '../platform/models/tiles';\nimport { Directions } from '../../constants';\n\nimport { hasGroundBelow, charTileBounds, isWall  } from './validations';\nimport { hadReachedEdge } from '../platform/models/utility/platformScroll';\n\n\nexport function shouldFallOnWalking (platform, hero, keyPress) {\n    const bounds = charTileBounds( platform, hero, keyPress);\n\n    const { direction } = keyPress;\n\n    if (hero.atExactTile && !isWall(bounds.bottomLeft)) {\n        return [ true , bounds.bottomLeft];\n    }\n\n    if (direction === Directions.LEFT) {\n        if( !isWall(bounds.bottomRight)) {\n            return [true, bounds.bottomRight];\n        }\n    }\n\n    if (direction === Directions.RIGHT) {\n        if( !isWall(bounds.bottomLeft)) {\n            return [true, bounds.bottomLeft];\n        }\n    }\n\n    return [];  \n}\n\nexport function validateFall(hero, platform, keyPress) {\n    const [shouldFall, groundTile] = shouldFallOnWalking(platform, hero, keyPress);\n    if (shouldFall && hero.jumping !== true && !hero.falling) {\n        hero.verticalSpeed = 0;\n        hero.jumping = false;\n        hero.atGround = false;\n        hero.falling = true;\n        hero.fallFromWalk = true;\n    }\n}\n\nexport function fall (hero, platform, keyPress) {\n    hero.verticalSpeed += hero.gravity;\n    hero.y += hero.verticalSpeed;\n    hero.falling = true;\n    stopFalling(hero,platform,keyPress);\n}\n\nexport function stopFalling(hero, platform, keyPress){\n    if( hero.y < platform.computedSize.height) {\n        const [hasGround, tile] = hasGroundBelow(platform, hero, keyPress);\n        \n        let otherFallCondition = true;\n        if ( hero.fallFunc && typeof hero.fallFunc === 'function') {\n            otherFallCondition = hero.fallFunc({hero, platform, keyPress});\n        }\n        \n        if (hasGround && otherFallCondition ) {\n            hero.atGround = true;\n            hero.falling = false;\n            hero.jumping = false;\n            hero.y = tile.y - hero.height;\n            hero.verticalSpeed = 0;\n        }\n    }\n}\n ","\nimport { Directions, KeyActions , PlatformEdge } from '../../constants';\n\nimport { moveLeft, moveRight} from './walk';\nimport { jump } from './jump';\nimport { fall } from './fall';\n\nfunction deleteAction(keyPress, keyCode){\n    if ( keyPress.actions[keyCode] && \n        keyPress.actions[keyCode].keyUp &&  \n        keyPress.actions[keyCode].actionDone) {\n        delete keyPress.actions[keyCode];\n    }\n}\n\nexport function characterMotion( {hero, keyPress, platform} ) {\n\n    if( keyPress.direction === Directions.LEFT ) {\n        moveLeft(hero, platform, keyPress)\n    } else if ( keyPress.direction === Directions.RIGHT) {\n        moveRight(hero, platform, keyPress);\n    }\n\n    if (keyPress.actions['74'] !== undefined &&\n        !keyPress.actions['74'].actionDone &&\n        hero.jumping === false) {\n        hero.verticalSpeed = -hero.jumpSpeedStart;\n        hero.jumping = true;\n    }\n\n    if(hero.verticalSpeed < 0) {\n        jump( hero, keyPress);\n    }\n\n    if (!hero.atGround && !hero.jumping) {\n       fall(hero, platform, keyPress)\n       if (hero.atGround) deleteAction(keyPress,'74');\n    }\n}","import { Directions, KeyActions , PlatformEdge } from '../../constants';\n\nimport { hasWallInFront } from './validations';\nimport { validateFall } from './fall';\n\nexport function moveRight(hero, platform, keyPress) {\n    hero.x += hero.stepSize;\n    const maxPlatformWidth =  platform.stageVisibility.width * platform.unitSize;\n\n    const [hasWall, tile] = hasWallInFront(platform, hero, Directions.RIGHT);\n    if (hasWall) {\n        hero.x = tile.x - hero.width;\n    }\n\n    if( hero.x + hero.width >= maxPlatformWidth) hero.x = maxPlatformWidth - hero.width;\n    let mapX = Math.floor( hero.x / platform.unitSize);\n    let middleX = Math.floor(platform.stageVisibility.width / 2)\n\n    hero.atMiddleX = false;\n    validateFall(hero, platform, keyPress);\n    if (hero.platformEdge === PlatformEdge.RIGHT_EDGE) return;\n    if (mapX >= middleX) {\n        hero.platformEdge = PlatformEdge.NO;\n        hero.x = middleX * platform.unitSize;\n        hero.atMiddleX = true;\n    }   \n}\n\nexport function moveLeft(hero, platform, keyPress) {\n    hero.x -= hero.stepSize;\n\n    const [hasWall, tile] = hasWallInFront(platform, hero, Directions.LEFT);\n    if (hasWall) {\n        hero.x = tile.x + hero.width;\n    }\n    if( hero.x <= 0) hero.x = 0;\n    let mapX = Math.floor( hero.x / platform.unitSize);\n    let middleX = Math.floor(platform.stageVisibility.width / 2);\n    hero.atMiddleX = false;\n    validateFall(hero, platform, keyPress);\n    if (hero.platformEdge === PlatformEdge.LEFT_EDGE) return;\n    if (mapX < middleX){\n        hero.platformEdge = PlatformEdge.NO;\n        hero.x = middleX * platform.unitSize;\n        hero.atMiddleX = true;\n    }\n}\n\nexport function charMoveLeft(char, platform) {\n    char.x -= char.stepSize;\n    const [hasWall, tile] = hasWallInFront(platform, char, Directions.LEFT);\n    if (hasWall) {\n        char.x = tile.x + char.width;\n    }\n}\n\nexport function charMoveRight(char, platform) {\n    char.x += char.stepSize;\n    const [hasWall, tile] = hasWallInFront(platform, char, Directions.RIGHT);\n    if (hasWall) {\n        char.x = tile.x - char.width;\n    }\n}","export function jump( hero, keyPress) {\n    hero.verticalSpeed += hero.gravity;\n    hero.y = hero.y + hero.verticalSpeed;\n    if( hero.verticalSpeed >= 0) {\n        hero.verticalSpeed = 0;\n        hero.jumping = false;\n        hero.atGround = false;\n        if (keyPress && keyPress.actions) keyPress.actions['74'].actionDone = true;\n       //deleteAction(keyPress,'74');\n    }\n};","import { Modes, Directions} from '../../../constants';\n\nimport { characterMotion } from '../../commons/characterMotion';\n\nconst heroMove = {\n    mechanicsFunction: ({state, key}) => {\n\n        let hero = state[key];\n        let platform = state.platform;\n        let keyPress = state.keyPress;\n        characterMotion( {hero, platform, keyPress} ); \n\n        return {\n            state,\n            changes: [key],\n        };\n    },\n    modes: [ Modes.PLAY ],\n};\n\nexport default {\n    heroMove,\n}","import pixiloop from '../../../../../pixiloop';\n\n\nfunction changeDirection(state, {newDirection}) {\n   \n}\n\nexport default {\n    changeDirection,\n}","function setupHero( { state, key} ) {\n\n    const platform = state['platform'];\n    let heroState = state[key];\n    heroState.x = heroState.mapX * platform.unitSize;\n    heroState.y = heroState.mapY * platform.unitSize;\n    heroState.gravity = 1;\n    heroState.jumpSpeedStart = 20;\n\n    return {\n        ...state,\n        hero: heroState,\n    }\n}\n\n\nexport default {\n    setupHero,\n}","import { initialState } from './states';\nimport mechanics from './mechanics';\nimport dispatch from './dispatch';\nimport setup from './setup'; /* can be removed or not */\n\nexport default {\n    name: 'hero',\n    state: { \n        ...initialState,\n    },\n    mechanics,\n    dispatch,\n    setup,\n};","import { Directions, Speed } from '../../../constants';\n\nexport const initialState = {\n    verticalSpeed: 0,\n    atExactTile: false,\n    jumpSpeedStart: 10,\n    gravity: 2,\n    atGround: false,\n    platformEdge: -1,\n    boundsOffset: 1,\n\n    width: 50,\n    height: 80,\n    stepSize: 50/10,\n    mapX: 3,\n    mapY: 3,\n    x: 0,\n    y: 0,\n};","import { Directions, Speed } from '../../../constants';\n\nexport const initialState = {\n    verticalSpeed: 0,\n    atExactTile: false,\n    jumpSpeedStart: 20,\n    gravity: 2,\n    atGround: false,\n    platformEdge: -1,\n    boundsOffset: 1,\n    \n    width: 50,\n    height: 80,\n    stepSize: 50/10,\n    mapX: 5,\n    mapY: 5,\n    x: 0,\n    y: 0,\n\n    life: 50,\n\n    /* ai related */\n    isThinking: false,\n    action:{\n        type: -1,\n        completed: true,\n    }\n};\n\nexport const MoveCode = {\n    WAIT: 0,\n    WALK: 1,\n    JUMP: 2,\n    ATTACK: 3,\n    JUMP_ATTACK: 4,\n};\n\nconst Level = {\n    INSANE: [4,4,4,4,3,3,3,2,1,0],\n    TOUGH:  [4,4,3,3,3,2,2,1,1,0],\n    HARD:   [4,4,3,3,2,2,1,1,1,0],\n    MEDIUM: [4,3,3,2,2,1,1,1,0,0],\n    EASY:   [4,3,2,1,1,1,1,0,0,0],\n};\n\nexport function getActionSet(boss){\n\n    return [1,1,1,1,1,1,1,1,1,1];\n    if( boss.life <= 5) {\n        return Level.INSANE;\n    } \n    \n    else if( boss.life > 5  && boss.life <= 15) {\n        return Level.TOUGH;\n    }\n\n    else if( boss.life > 15  && boss.life <= 25) {\n        return Level.HARD;\n    }\n\n    else if( boss.life > 25 && boss.life <= 35 ) {\n        return Level.MEDIUM;\n    }\n    return Level.EASY;\n};","import { MoveCode , getActionSet } from '../../boss/models/states';\nimport { Directions } from '../../../constants';\n\nexport const ActionCode = { ...MoveCode };\n\nexport function randomRange (min, max) {\n    const actualMax = max + 1;\n    const rand = Math.floor( Math.random() * (actualMax - min)) + min; \n    //console.log(\"Random Generated...: \", rand);\n    return rand;\n}\n\nexport function selectRange () {\n    return randomRange(0,9);\n}\n\nfunction standBy() {\n    return {\n        standByCount: 0,\n        standByLength: randomRange(20,80), \n    }\n}\n\nfunction walk() {\n    return {\n        totalSteps: randomRange(1,7), \n        stepCount: 0,\n        unitSteps: 0,\n        direction: (randomRange(0,1) === 1) ? Directions.LEFT : Directions.RIGHT,\n    }\n}\n\nfunction jump() {\n    return {\n        jumpPower: randomRange(10,30),\n        direction: (randomRange(0,1) === 1) ? Directions.LEFT : Directions.RIGHT,\n    }\n}\n\nfunction attack() {\n    return {\n        attackCount: 0,\n        cycle: randomRange(1,5), \n    }\n}\n\nfunction jumpAttack() {\n    return {\n        attackCount: 0,\n        cycle: randomRange(1,3),\n    }\n}\n\nconst aiPropsFuncs =  {\n    [MoveCode.WAIT]: standBy,\n    [MoveCode.WALK]: walk,\n    [MoveCode.JUMP]: jump,\n    [MoveCode.ATTACK]: attack,\n    [MoveCode.JUMP_ATTACK]: jumpAttack,\n};\n\nexport function think(boss) {\n\n    if (!boss.onStandBy) {\n        boss.onStandBy = true;\n        return {\n            type: MoveCode.WAIT,\n            completed: false,\n            ...standBy(),\n        }   \n    }\n   \n    const actions = getActionSet(boss);\n    const index = selectRange();\n    const action = actions[index];\n    const paramFunc = aiPropsFuncs[action];\n    const aiVariations = (paramFunc && typeof paramFunc === 'function') ? paramFunc(): {};\n    boss.onStandBy = false;\n    const result = {\n        type: action,\n        completed: false,\n        ...aiVariations,\n    };\n    return result;\n}\n","\n\nimport { Directions, KeyActions , PlatformEdge } from '../../constants';\n\nimport { charMoveLeft, charMoveRight} from './walk';\nimport { jump } from './jump';\nimport { fall } from './fall';\nimport { think , ActionCode } from './ai/bossBrain';\n\n\nfunction standBy({boss,platform}) {\n\n    const { action } = boss;\n    action.standByCount += 1;\n    if (action.standByCount >= action.standByLength) {\n        action.completed = true;\n    }\n}\n\nfunction walk({boss, platform}) {\n    const { action } = boss;\n    if (action.direction === Directions.LEFT) {\n        charMoveLeft(boss, platform);\n    } else if ( action.direction === Directions.RIGHT) {\n        charMoveRight(boss, platform);\n    }\n    \n    action.unitSteps += boss.stepSize;\n    if (action.unitSteps % platform.unitSize === 0) {\n        action.unitSteps = 0;\n        action.stepCount += 1;\n    }\n\n    if ( action.stepCount >= action.totalSteps) {\n        console.log(\"walking completed...\");\n        action.completed = true;\n    }\n}\n\n\nfunction jumpOnly({boss, platform }) {\n    console.log(\"\");\n    console.log(\"jumpOnly()...\");\n    boss.action.completed = true;\n}\n\nfunction jumpAttack({boss, platform}) {\n    console.log(\"\");\n    console.log(\"jumpAttack()...\");\n    boss.action.completed = true;\n}\n\nfunction attack({boss, platform}) {\n    console.log(\"\");\n    console.log(\"attack()...\");\n    boss.action.completed = true;\n}\n\nconst bossActions = {\n    [ActionCode.WAIT]: standBy,\n    [ActionCode.WALK]: walk,\n    [ActionCode.JUMP]: jumpOnly,\n    [ActionCode.ATTACK]: attack,\n    [ActionCode.JUMP_ATTACK]: jumpAttack,\n};\n\nexport function bossMoves( {boss, platform} ){\n    \n    if (boss.action === undefined || boss.action.completed) {\n        console.log(\"\");\n        console.log(\"boss Think...\");\n        boss.action = think(boss);\n        console.log(\"boss Action: \", boss.action);\n    } \n\n    if (boss.action !== undefined && boss.action.completed === false) {\n        const actionFunc = bossActions[boss.action.type];\n        if( actionFunc && typeof actionFunc === 'function') {\n            actionFunc({boss, platform});\n        }\n    }\n\n    if (!boss.atGround && !boss.jumping) {\n        fall(boss, platform, {})\n    }\n  \n}\n","import { Modes, Directions} from '../../../constants';\n\nimport { bossMoves } from '../../commons/bossMoves';\n\nconst bossActions = {\n\n    mechanicsFunction: ({state, key}) => {\n\n        let boss = state[key];\n        let platform = state.platform;\n        \n        bossMoves( {boss, platform} ); \n\n        return {\n            state,\n            changes: [key],\n        };\n    },\n    modes: [ Modes.PLAY ],\n};\n\nexport default {\n    bossActions,\n}","import pixiloop from '../../../../../pixiloop';\n\n\nfunction changeDirection(state, {newDirection}) {\n   \n}\n\nexport default {\n    changeDirection,\n}","function setupBoss( { state, key} ) {\n\n    const platform = state['platform'];\n    \n    let boss = state[key];\n    boss.x = boss.mapX * platform.unitSize;\n    boss.y = boss.mapY * platform.unitSize;\n    boss.gravity = 1;\n    boss.jumpSpeedStart = 20;\n\n    return {\n        ...state,\n        boss: boss,\n    }\n}\n\n\nexport default {\n    setupBoss,\n}","import { initialState } from './states';\nimport mechanics from './mechanics';\nimport dispatch from './dispatch';\nimport setup from './setup'; /* can be removed or not */\n\nexport default {\n    name: 'boss',\n    state: { \n        ...initialState,\n    },\n    mechanics,\n    dispatch,\n    setup,\n};","import platform from './units/platform/models';\nimport hero from './units/hero/models';\nimport boss from './units/boss/models';\n\nexport default {\n    platform,\n    hero,\n    boss,\n}","import * as PIXI from 'pixi.js';\nimport {toTexture}  from '../../textures';\n\nclass Tile extends PIXI.Container {\n    constructor(tileData){\n        super();\n        this.sprite = new PIXI.Sprite(toTexture(tileData.texture));\n\n        const style = new PIXI.TextStyle({\n            fontFamily: 'Arial',\n            fontSize: 14,\n            fontStyle: 'italic',\n            fontWeight: 'bold',\n            fill: '#FF9900',\n        });\n    \n\n        this.number = new PIXI.Text('00', style);\n        this.data = tileData;\n        this.x = tileData.x;\n        this.y = tileData.y;\n        this.visible = tileData.visible;\n\n       \n        this.addChild(this.sprite);\n        //this.addChild(this.number);\n    }\n    destroy(options) {\n        super.destroy(options);\n        this.data = null;\n    }\n\n    updateNumber(number){\n      // this.number.text = `${number}`;\n    }\n}\nexport default Tile;","import * as PIXI from 'pixi.js';\nimport { registerDisplayAndState, unregisterDisplayAndState, useDispatch } from '../../../../pixiloop';\nimport Tile from './Tile';\nimport Textures from '../../textures';\n\nconst WORLD_NAMESPACE = 'platform';\nclass Platform extends PIXI.Container {\n    constructor() {\n        super();\n        registerDisplayAndState(WORLD_NAMESPACE, this );\n    }\n    \n    destroy(options){\n        unregisterDisplayAndState(WORLD_NAMESPACE);\n        super.destroy(options);\n    }\n\n    update({ state }) {\n        this.state = state;\n        if (!state.fullStepComplete) {\n            this.renderScroll();\n        } else {\n            this.renderVisibleArea();\n        }\n       \n    }\n\n    renderScroll(){\n        const  {\n            stage,\n            stageVisibility: visibility,\n            renderedOffset,\n        } = this.state;\n    \n        let maxVisibleX = visibility.startX + visibility.width + renderedOffset;\n        if (maxVisibleX >= stage[0].length-1) maxVisibleX = stage[0].length - 1;\n        let minVisibleX = visibility.startX - renderedOffset; \n        if (minVisibleX <= 0) minVisibleX = 0;\n        for (let i = 0; i < stage.length; i++) {\n            for (let j = minVisibleX;  j <= maxVisibleX; j++) {\n                const data = stage[i][j];\n                const tile = this.tiles[i][j];\n                tile.x = data.x;\n                tile.y = data.y;\n                tile.updateNumber(`${data.mapX} - ${data.mapY}` );\n            }\n        }\n    }\n\n    renderVisibleArea(){\n        const { stage } = this.state;\n        for( let i = 0; i < stage.length; i++ ) {\n            for( let j = 0; j < stage[i].length; j++ ) {\n                const data = stage[i][j];\n                let tile = this.tiles[i][j];\n                tile.visible = data.visible;\n                tile.x = data.x;\n                tile.y = data.y;\n            } \n        }\n    }\n\n    setup(state) {\n        this.state = state;\n        this.tiles = [];    \n        this.setupTileMatrix();\n    }\n\n    setupTileMatrix(){\n        let stage = this.state.stage;\n        for( let i = 0; i < stage.length; i++ ) {\n            this.tiles[i] = [];\n            for( let j = 0; j < stage[i].length; j++ ) {\n                const tileData = stage[i][j];\n                let tile = new Tile(tileData);\n                this.tiles[i][j] = tile;\n                this.addChild(tile);\n            } \n        }\n    }\n     \n}\n\nexport default Platform;","import * as PIXI from 'pixi.js';\nimport { getGameState, registerDisplayAndState, unregisterDisplayAndState } from '../../../../pixiloop';\nimport Textures from '../../textures';\n\nconst HERO_NAMESPACE = 'hero';\n\nclass Hero extends PIXI.Container {\n\n    constructor(){\n        super();\n        registerDisplayAndState(HERO_NAMESPACE, this);\n    }\n    \n    destroy(options){\n        unregisterDisplayAndState(HERO_NAMESPACE);\n        super.destroy(options);\n    }\n\n    setup(state){\n        this.state = state;\n        this.x = state.x;\n        this.y = state.y;\n        this.width = state.width;\n        this.height = state.height;\n        this.setupSkin();\n    }\n\n    setupSkin() {\n        this.skin = new PIXI.Sprite(Textures.FACE)\n        this.skin.x = 0;\n        this.skin.y = 0;\n        this.skin.width = this.state.width;\n        this.skin.height = this.state.height;\n        this.addChild(this.skin);\n    }\n\n    update({state}) {\n        this.state = state;\n        this.x = state.x;\n        this.y = state.y;\n    }\n\n\n}\n\nexport default Hero;","import * as PIXI from 'pixi.js';\nimport { getGameState, registerDisplayAndState, unregisterDisplayAndState } from '../../../../pixiloop';\nimport Textures from '../../textures';\n\nconst NAMESPACE = 'boss';\n\nclass Boss extends PIXI.Container {\n\n    constructor(){\n        super();\n        registerDisplayAndState(NAMESPACE, this);\n    }\n    \n    destroy(options){\n        unregisterDisplayAndState(NAMESPACE);\n        super.destroy(options);\n    }\n\n    setup(state){\n        this.state = state;\n        this.x = state.x;\n        this.y = state.y;\n        this.width = state.width;\n        this.height = state.height;\n        this.setupSkin();\n    }\n\n    setupSkin() {\n        console.log(\"Setupskin()\");\n        this.skin = new PIXI.Sprite(Textures.BOSS)\n        this.skin.x = 0;\n        this.skin.y = 0;\n        this.skin.width = this.state.width;\n        this.skin.height = this.state.height;\n        this.addChild(this.skin);\n    }\n\n    update({state}) {\n        this.state = state;\n        this.x = state.x;\n        this.y = state.y;\n    }\n\n\n}\n\nexport default Boss;","import  * as PIXI from 'pixi.js';\nimport pixiloop, { changeMode, useDispatch } from '../../pixiloop/';\n\nimport models from './models';\nimport Platform from './units/platform';\nimport Hero from './units/hero';\nimport Boss from './units/boss';\nimport Textures from './textures';\n\n\nimport { Modes } from './constants';\n\nclass GameController {\n\n    init(container) {\n        pixiloop.init({\n            pixiSettings:  {\n                width: 750,\n                height: 600,\n                backgroundColor: 0xF1F1F1,\n                resolution: 1,\n            },\n            models,\n        });\n        container.appendChild(pixiloop.app.view);\n        this.initDisplays();\n        pixiloop.setupGame();\n        changeMode(Modes.PLAY);\n        this.platform.addChild(this.hero);\n        this.platform.addChild(this.boss);\n        pixiloop.start();\n        window.addEventListener('keydown',this.handleKeyDown,false);\n        window.addEventListener('keyup',this.handleKeyUp,false);\n    }\n\n    handleKeyDown(event) {\n        const { platform : { pushKeyPresses } } = useDispatch();\n        pushKeyPresses({keyCode: event.keyCode});\n    }\n\n    handleKeyUp(event) {\n        const { platform : { popKeyPresses } } = useDispatch();\n        popKeyPresses({keyCode: event.keyCode});\n    }\n\n\n    initDisplays(){\n        this.platform = new Platform();\n        pixiloop.app.stage.addChild( this.platform);\n        this.hero = new Hero();\n        this.boss = new Boss();\n        \n    }   \n}\n\nexport default new GameController();","import React, { memo, useEffect } from 'react'; \n\nimport MuiGrid from '@material-ui/core/Grid';\nimport { spacing } from '@material-ui/system';\nimport { styled } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport styles from './styles';\nimport controller from './controller';\n\nconst Grid = styled(MuiGrid)(spacing);\nconst useStyles = makeStyles(styles);\n\nfunction Scroller(props){\n    const classes = useStyles();\n\n    function setupGame(){\n        const container = document.getElementById('scrollerCanvas');\n        controller.init(container);\n    }\n\n    useEffect (() => {\n        setupGame();\n    },[]);\n\n    return (\n        <div id=\"scrollerCanvas\" className={classes.canvasContainer}>\n        \n        </div>\n    )\n};\n\nScroller.propTypes = {};  \nScroller.defaultProps = {};\n\nconst enhancers = [\n    memo,\n];\n\nexport default compose(...enhancers)(Scroller);","import React from 'react';\nimport { BrowserRouter, Route, Switch  } from 'react-router-dom';\nimport Routes from './routes';\nimport Snake from '../components/Snake';\nimport Scroller from '../components/Scroller';\n\nconst AppRouter = (props) => (\n  <BrowserRouter>\n    <Switch>\n        <Route path={Routes.SCROLLER} component={Scroller} />\n        <Route path={Routes.SNAKE} component={Snake} />\n        <Route path={Routes.GAME} component={Snake} />\n      \n    </Switch>\n  </BrowserRouter>\n);\n\nexport default AppRouter;","import {createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 360,\n      md: 600,\n      lg: 1024,\n      xl: 1280,\n    },\n  },\n\n  \n  palette: {\n      type: 'light',\n    primary: {\n        main:'#1565c0' // customise your main color here\n    },\n    secondary: {main:'#673ab7' },\n     error: {main:'#ca0909' },\n\n     sand:{main:'#F4DECB'},\n     shell:{main:'#F8EEE7'},\n     status:{\n         danger:'#b71c1c'\n     },\n\n    \n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});","import axios from 'axios';\n\nexport const getUsersAPI = () => {\n    return new Promise((resolve, reject) => {\n        const request = {};\n        axios.get('/data/users.json', request)\n          .then(res => {\n            resolve(res.data);\n          })\n          .catch(error => {\n            reject(error);\n          });\n    });\n}\n\nexport const getCompaniesAPI = () => {\n  return new Promise((resolve, reject) => {\n      const request = {};\n      axios.get('/data/company.json', request)\n        .then(res => {\n          resolve(res.data);\n        })\n        .catch(error => {\n          reject(error);\n        });\n  });\n}\n\n","import { dispatch } from '../../../store';\nimport { getUsersAPI, getCompaniesAPI } from '../../../api/users'; \n\nexport async function getUsers() {\n    try {\n        const data = await getUsersAPI();\n        this.setUsers(data.users);\n    } catch (error) {\n        console.log(\"\");\n        console.log(\"Error#\");\n        console.log(error);\n    } finally {\n       \n    }\n}\n\nexport async function getCompanies() {\n    try {\n        const data = await getCompaniesAPI();\n        this.setCompanies(data.companies);\n    } catch (error) {\n        console.log(\"\");\n        console.log(\"Error#\");\n        console.log(error);\n    } finally {\n       \n    }\n}","const setUsers = (state, users) => ({\n    ...state,\n    users,\n});\n\nconst setCompanies = (state, companies) => ({\n    ...state,\n    companies,\n});\n  \nexport default {\n    reducers: {\n        setUsers,\n        setCompanies,\n    },\n};","import { createSelector } from 'reselect';\n\nconst getExamples = state => state.examples.examples;\nexport const getExamplesState = createSelector(\n  [getExamples],\n  data => data,\n);\n\nconst getUsers = state => state.examples.users;\nexport const getUsersState = createSelector(\n  [getUsers],\n  data => data,\n);\n\nconst getCompanies = state => state.examples.companies;\nexport const getCompaniesState = createSelector(\n  [getCompanies],\n  data => data,\n);\n","import omit from 'lodash/omit';\nimport * as effects from './effects';\nimport reducer from './reducers';\nimport * as selectors from './selectors';\n\nconst initialState = {\n    defaultUser: {\n        name: 'Phil',\n        last: 'Ardona',\n        userId: '12345',\n    },\n    users: [],\n};\n\nexport default {\n    name: 'examples',\n    state: initialState,\n    effects: () => effects,\n    reducers: reducer.reducers,\n    selectors: omit(selectors, Object.keys(selectors).filter(prop => selectors[prop].omitToRematch)),\n};\n  ","import { init } from '@rematch/core';\nimport selectPlugin from '@rematch/select';\nimport thunk from 'redux-thunk';\nimport * as models from './models';\nconst middlewares = [thunk];\n\nconst store = init({\n    redux: {\n      middlewares,\n    },\n    models: { ...models, },\n    plugins: [selectPlugin],\n  });\n  \n  export const { select, dispatch, getState } = store;\n  export default store;\n  ","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport AppRouter from './AppRouter';\nimport {theme} from '../styles/theme';\nimport store from '../store';\n\nconst App = () => (\n  <Provider store={store}>\n  <MuiThemeProvider theme={theme}>\n    <AppRouter />\n  </MuiThemeProvider>\n  </Provider>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/app';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}